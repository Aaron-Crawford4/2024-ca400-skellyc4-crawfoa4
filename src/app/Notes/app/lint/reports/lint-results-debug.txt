C:\Users\Ciaran\.gradle\caches\transforms-3\f7131d4c4396a01488a896d4251252b4\transformed\runtime-release\jars\lint.jar: Warning: Library lint checks reference invalid APIs; these checks will be skipped!

Lint found an issue registry (androidx.compose.runtime.lint.RuntimeIssueRegistry)
which contains some references to invalid API:
org.jetbrains.kotlin.analysis.api.session.KtAnalysisSessionProvider: org.jetbrains.kotlin.analysis.api.lifetime.KtLifetimeTokenFactory getTokenFactory()
(Referenced from androidx/compose/runtime/lint/AutoboxingStateCreationDetector.class)

Therefore, this lint check library is not included
in analysis. This affects the following lint checks:
AutoboxingStateValueProperty
AutoboxingStateCreation
CoroutineCreationDuringComposition
FlowOperatorInvokedInComposition
ComposableLambdaParameterNaming
ComposableLambdaParameterPosition
ComposableNaming
StateFlowValueCalledInComposition
CompositionLocalNaming
MutableCollectionMutableState
ProduceStateDoesNotAssignValue
RememberReturnType
OpaqueUnitKey
UnrememberedMutableState

To use this lint check, upgrade to a more recent version
of the library. [ObsoleteLintCustomCheck]

   Explanation for issues of type "ObsoleteLintCustomCheck":
   Lint can be extended with "custom checks": additional checks implemented by
   developers and libraries to for example enforce specific API usages
   required by a library or a company coding style guideline.

   The Lint APIs are not yet stable, so these checks may either cause a
   performance degradation, or stop working, or provide wrong results.

   This warning flags custom lint checks that are found to be using obsolete
   APIs and will need to be updated to run in the current lint environment.

   It may also flag issues found to be using a newer version of the API,
   meaning that you need to use a newer version of lint (or Android Studio or
   Gradle plugin etc) to work with these checks.

C:\Users\Ciaran\2024-ca400-skellyc4-crawfoa4\src\app\Notes\app\src\main\res\mipmap-anydpi-v26: Warning: This folder configuration (v26) is unnecessary; minSdkVersion is 26. Merge all the resources in this folder into mipmap-anydpi. [ObsoleteSdkInt]

   Explanation for issues of type "ObsoleteSdkInt":
   This check flags version checks that are not necessary, because the
   minSdkVersion (or surrounding known API level) is already at least as high
   as the version checked for.

   Similarly, it also looks for resources in -vNN folders, such as values-v14
   where the version qualifier is less than or equal to the minSdkVersion,
   where the contents should be merged into the best folder.

C:\Users\Ciaran\2024-ca400-skellyc4-crawfoa4\src\app\Notes\app\src\main\res\layout\item_container_user.xml:2: Warning: This tag and its children can be replaced by one <TextView/> and a compound drawable [UseCompoundDrawables]
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
 ~~~~~~~~~~~~

   Explanation for issues of type "UseCompoundDrawables":
   A LinearLayout which contains an ImageView and a TextView can be more
   efficiently handled as a compound drawable (a single TextView, using the
   drawableTop, drawableLeft, drawableRight and/or drawableBottom attributes
   to draw one or more images adjacent to the text).

   If the two widgets are offset from each other with margins, this can be
   replaced with a drawablePadding attribute.

   There's a lint quickfix to perform this conversion in the Eclipse plugin.

C:\Users\Ciaran\2024-ca400-skellyc4-crawfoa4\src\app\Notes\app\src\main\res\layout\activity_collections.xml:7: Warning: Possible overdraw: Root element paints background @color/colorPrimary with a theme that also paints a background (inferred theme is @style/Theme.Notes) [Overdraw]
    android:background="@color/colorPrimary"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Ciaran\2024-ca400-skellyc4-crawfoa4\src\app\Notes\app\src\main\res\layout\activity_create_note.xml:7: Warning: Possible overdraw: Root element paints background @color/colorPrimary with a theme that also paints a background (inferred theme is @style/Theme.Notes) [Overdraw]
    android:background="@color/colorPrimary"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Ciaran\2024-ca400-skellyc4-crawfoa4\src\app\Notes\app\src\main\res\layout\activity_login.xml:7: Warning: Possible overdraw: Root element paints background @color/colorPrimary with a theme that also paints a background (inferred theme is @style/Theme.Notes) [Overdraw]
    android:background="@color/colorPrimary"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Ciaran\2024-ca400-skellyc4-crawfoa4\src\app\Notes\app\src\main\res\layout\activity_main.xml:7: Warning: Possible overdraw: Root element paints background @color/colorPrimary with a theme that also paints a background (inferred theme is @style/Theme.Notes) [Overdraw]
    android:background="@color/colorPrimary"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Ciaran\2024-ca400-skellyc4-crawfoa4\src\app\Notes\app\src\main\res\layout\activity_markdown_preview.xml:7: Warning: Possible overdraw: Root element paints background @color/colorPrimary with a theme that also paints a background (inferred theme is @style/Theme.Notes) [Overdraw]
    android:background="@color/colorPrimary"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Ciaran\2024-ca400-skellyc4-crawfoa4\src\app\Notes\app\src\main\res\layout\activity_register.xml:6: Warning: Possible overdraw: Root element paints background @color/colorPrimary with a theme that also paints a background (inferred theme is @style/Theme.Notes) [Overdraw]
    android:background="@color/colorPrimary"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Ciaran\2024-ca400-skellyc4-crawfoa4\src\app\Notes\app\src\main\res\layout\activity_view_note.xml:7: Warning: Possible overdraw: Root element paints background @color/colorPrimary with a theme that also paints a background (inferred theme is @style/Theme.Notes) [Overdraw]
    android:background="@color/colorPrimary"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "Overdraw":
   If you set a background drawable on a root view, then you should use a
   custom theme where the theme background is null. Otherwise, the theme
   background will be painted first, only to have your custom background
   completely cover it; this is called "overdraw".

   NOTE: This detector relies on figuring out which layouts are associated
   with which activities based on scanning the Java code, and it's currently
   doing that using an inexact pattern matching algorithm. Therefore, it can
   incorrectly conclude which activity the layout is associated with and then
   wrongly complain that a background-theme is hidden.

   If you want your custom background on multiple pages, then you should
   consider making a custom theme with your custom background and just using
   that theme instead of a root element background.

   Of course it's possible that your custom drawable is translucent and you
   want it to be mixed with the background. However, you will get better
   performance if you pre-mix the background with your drawable and use that
   resulting image or color as a custom theme background instead.

C:\Users\Ciaran\2024-ca400-skellyc4-crawfoa4\src\app\Notes\app\src\main\res\values\colors.xml:11: Warning: The resource R.color.colorNoteDateTimeText appears to be unused [UnusedResources]
    <color name="colorNoteDateTimeText">#FAFAFA</color>
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

0 errors, 11 warnings
